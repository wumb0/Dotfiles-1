#Happily donated by Jaime Geiger
#https://github.com/jgeigerm

# Rebind action key; default is C-b
# Compromise: C-b is used by certain apps like VIM; C-q should be okay...
set-option -g prefix C-q
unbind-key C-b
bind-key C-e send-prefix

bind-key C-q last-window

# Set the default terminal string
set-option -g default-terminal "screen-256color"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# This is kind of a hack to see if you are on OSX or not
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection
if-shell 'test "$(which xclip)"' 'bind-key -t vi-copy y copy-pipe "xclip -i -selection clipboard"'
if-shell 'test "$(uname)" = "Darwin"' 'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'

# # Enable titles and configure them
set-option -g set-titles on
set-option -g set-titles-string "#H: #(echo $PWD) \"#S\" (#W)#F [#I:#P]"

# # Agressive resize
set-window-option -g aggressive-resize on

# # Let's get 10,000 lines of history
set-option -g history-limit 100000

# # Allow xterm scrollback, while keeping the standard tmux overrides
set-option -g terminal-overrides "xterm*:smcup@:rmcup@,*88col*:colors=88,*256col*:colors=256,xterm*:XT"

# Set the statusbar options
set-option -g status-utf8               # Statusbar in UTF-8
set-option -g status-interval 60        # Redraw statusbar every 60 seconds; default is 15
set-option -g status-bg default         # Eric's pretty colors
set-option -g message-bg "#cccccc"
set-option -g status-left "#[fg=colour245,bg=default]%H:%M #(~/.tmux-files/battery Discharging;~/.tmux-files/battery Charging) [#S]#[fg=#cccccc,bg=#333333,bold]#[default]"     # Set left information text of statusbar; Display hostname of localhost
set-option -g status-right "#[fg=colour245,bg=default]<~#H~>"#[default]"     # Set right information text of statusbar; Display hostname of localhost

set-option -g status-right-length 48    # Maximum characters to display on right info: 48
set-option -g status-left-length 96     # Maximum characters to display on left info: 96

# # Set the window styles in the status
set-window-option -g utf8 on                                    # Enable UTF-8
set-window-option -g window-status-format " #W[#I:#P] "       # Window [number : pane]
set-window-option -g window-status-current-format " {#W[#I:#P]} " # Window [number : pane]
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-fg "#268bd2"
set-window-option -g window-status-fg "#505050"

# Clock settings; cyan looks nice with colorscheme and 24-hour mode makes the days look longer :)
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24

# # Set window title automatically
set-window-option -g automatic-rename

# Rebind pane split shortcuts
unbind %                    # Remove default binding for splitting vertically
unbind '"'                  # Remove default binding for splitting horizontally
bind-key - split-window -v  -c "#{pane_current_path}" # Horizontal split
bind-key \ split-window -h  -c "#{pane_current_path}" # Vertical split
bind-key | split-window -h  -c "#{pane_current_path}" # Vertical split

# # Vi(m)-like keybindings; movements bounded to hjkl
set-window-option -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

#Enable mouse support
set-option -g mode-mouse on                     # Allow mouse to enter copy mode and initiate selection
set-option -g mouse-utf8 on                     # Scrollwheel works in VIM with this option?
set-window-option -g mouse-select-window on     # Select windows (by clicking in the status bar)
set-window-option -g mouse-select-pane on       # Select panes
set-window-option -g mouse-resize-pane on       # Resize panes (by dragging dividers)
set -g lock-after-time 2000
set -g lock-command "top"
#if-shell 'test "$(which cmatrix)"' 'set -g lock-command "cmatrix"'
if-shell 'test "$(which htop)"' 'set -g lock-command "htop"'
bind-key L lock-session

#joining and sending panes to other windows is easy now
#specify window#.pane# to get/send panes
#only works in currrent session
bind-key j command-prompt -p "Join pane:"  "join-pane -s ':%%'"
bind-key s command-prompt -p "Send pane:"  "join-pane -t ':%%'"

#reload tmux.conf from ~/.tmux.conf
bind-key ` source-file ~/.tmux.conf
set -g base-index 1
setw -g aggressive-resize on
